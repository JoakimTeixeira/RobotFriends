{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/MessageError.js","containers/App.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","map","user","key","SearchBox","searchChange","type","placeholder","onChange","ApiError","App","onSearchChange","event","setState","searchField","target","value","state","error","ms","promise","Promise","resolve","reject","timeoutId","setTimeout","Error","then","res","clearTimeout","err","this","timeoutPromise","fetch","response","json","users","catch","console","log","filteredRobots","filter","robot","toLowerCase","includes","length","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAqBeA,G,MAlBF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACxB,OACE,kBAAC,WAAD,KACE,6BAASC,UAAU,QACjB,yBACEA,UAAU,WACVC,IAAI,QACJC,IAAG,+BAA0BL,EAA1B,mBAEL,yBAAKG,UAAU,oBACb,wBAAIA,UAAU,cAAcF,GAC5B,uBAAGE,UAAU,eAAeD,QCEvBI,EAZE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,kBAAC,WAAD,KACGA,EAAOC,KAAI,SAAAC,GAAS,IACbT,EAAoBS,EAApBT,GAAIC,EAAgBQ,EAAhBR,KAAMC,EAAUO,EAAVP,MAEhB,OAAO,kBAAC,EAAD,CAAMQ,IAAKV,EAAIA,GAAIA,EAAIC,KAAMA,EAAMC,MAAOA,SCQ1CS,G,MAfG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,2BAAOT,UAAU,UACf,wBAAIA,UAAU,gBAAd,kBAEA,2BACEA,UAAU,eACVU,KAAK,SACLC,YAAY,cACZC,SAAUH,OCAHI,G,MATE,WACf,OACE,yBAAKb,UAAU,SACb,wBAAIA,UAAU,eAAd,yBACA,uBAAGA,UAAU,qBAAb,iCC0ESc,G,wDA1Eb,aAAe,IAAD,8BACZ,gBAsCFC,eAAiB,SAAAC,GACf,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAtC1C,EAAKC,MAAQ,CACXjB,OAAQ,GACRc,YAAa,GACbI,OAAO,GALG,E,2DASCC,EAAIC,GACjB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAYC,YAAW,WAC3BF,EAAO,IAAIG,SACVP,GACHC,EAAQO,MACN,SAAAC,GACEC,aAAaL,GACbF,EAAQM,MAEV,SAAAE,GACED,aAAaL,GACbD,EAAOO,W,0CAMM,IAAD,OAClBC,KAAKC,eACH,IACAC,MAAM,8CACHN,MAAK,SAAAO,GAAQ,OAAIA,EAASC,UAC1BR,MAAK,SAAAS,GAAK,OAAI,EAAKvB,SAAS,CAAEb,OAAQoC,QACzCC,OAAM,SAAAP,GACNQ,QAAQC,IAAI,qBAAsBT,GAClC,EAAKjB,SAAS,CAAEK,OAAO,S,+BAQjB,IAAD,EACgCa,KAAKd,MAApCjB,EADD,EACCA,OAAQc,EADT,EACSA,YAAaI,EADtB,EACsBA,MAEvBsB,EAAiBxC,EAAOyC,QAAO,SAAAC,GACnC,OAAOA,EAAMhD,KAAKiD,cAAcC,SAAS9B,EAAY6B,kBAGvD,OAAsB,IAAlB3C,EAAO6C,OACF,wBAAIjD,UAAU,WAAd,cAGLsB,EACK,kBAAC,EAAD,MAIP,kBAAC,WAAD,KACE,0BAAMtB,UAAU,QACd,4BAAQA,UAAU,UAChB,wBAAIA,UAAU,gBAAd,gBACA,kBAAC,EAAD,CAAWS,aAAc0B,KAAKpB,kBAEhC,6BAASf,UAAU,aACjB,kBAAC,EAAD,CAAUI,OAAQwC,W,GAnEZM,cCAlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.2ec095af.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport \"./Card.css\";\n\nconst Card = ({ id, name, email }) => {\n  return (\n    <Fragment>\n      <article className=\"card\">\n        <img\n          className=\"card-img\"\n          alt=\"robot\"\n          src={`https://robohash.org/${id}?size=250x250`}\n        />\n        <div className=\"card-description\">\n          <h2 className=\"card-title\">{name}</h2>\n          <p className=\"card-detail\">{email}</p>\n        </div>\n      </article>\n    </Fragment>\n  );\n};\n\nexport default Card;\n","import React, { Fragment } from \"react\";\nimport Card from \"./Card\";\n\n// Robots is destructed to not have to import \"props\" keyword and later call it as props.robots\nconst CardList = ({ robots }) => {\n  return (\n    <Fragment>\n      {robots.map(user => {\n        let { id, name, email } = user;\n\n        return <Card key={id} id={id} name={name} email={email} />;\n      })}\n    </Fragment>\n  );\n};\n\nexport default CardList;\n","import React from \"react\";\nimport \"./SearchBox.css\";\n\nconst SearchBox = ({ searchChange }) => {\n  return (\n    <label className=\"search\">\n      <h2 className=\"search-title\">Search robots:</h2>\n\n      <input\n        className=\"search-input\"\n        type=\"search\"\n        placeholder=\"Insert name\"\n        onChange={searchChange}\n      ></input>\n    </label>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\nimport \"./MessageError.css\";\n\nconst ApiError = () => {\n  return (\n    <div className=\"error\">\n      <h1 className=\"error-title\">The API seems busy...</h1>\n      <p className=\"error-description\">Try again in a few minutes</p>\n    </div>\n  );\n};\n\nexport default ApiError;\n","import React, { Fragment, Component } from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport MessageError from \"../components/MessageError\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchField: \"\",\n      error: false,\n    };\n  }\n\n  timeoutPromise(ms, promise) {\n    return new Promise((resolve, reject) => {\n      const timeoutId = setTimeout(() => {\n        reject(new Error());\n      }, ms);\n      promise.then(\n        res => {\n          clearTimeout(timeoutId);\n          resolve(res);\n        },\n        err => {\n          clearTimeout(timeoutId);\n          reject(err);\n        }\n      );\n    });\n  }\n\n  componentDidMount() {\n    this.timeoutPromise(\n      5000,\n      fetch(\"https://jsonplaceholder.typicode.com/users\")\n        .then(response => response.json())\n        .then(users => this.setState({ robots: users }))\n    ).catch(err => {\n      console.log(\"HTTP request error\", err);\n      this.setState({ error: true });\n    });\n  }\n\n  onSearchChange = event => {\n    this.setState({ searchField: event.target.value });\n  };\n\n  render() {\n    const { robots, searchField, error } = this.state;\n\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n\n    if (robots.length === 0) {\n      return <h1 className=\"loading\">Loading...</h1>;\n    }\n\n    if (error) {\n      return <MessageError />;\n    }\n\n    return (\n      <Fragment>\n        <main className=\"main\">\n          <header className=\"header\">\n            <h1 className=\"header-title\">RobotFriends</h1>\n            <SearchBox searchChange={this.onSearchChange} />\n          </header>\n          <section className=\"card-list\">\n            <CardList robots={filteredRobots} />\n          </section>\n        </main>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\n// import * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}